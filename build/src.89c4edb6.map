{"version":3,"sources":["components/table_component.js","index.js"],"names":["DataWorker","data","rowsOnPage","document","objectToArray","pageData","columnsHead","querySelectorAll","tableBody","querySelector","button","page","result","pagesActive","i","name","push","JSON","parse","stringify","Object","values","length","event","tr","createElement","appendChild","fillingRow","click","dataRow","row","j","td","innerHTML","initPagination","sortTable","filterTable","fillingTable","onclick","eventHandlerFilterClick","bind","window","x","y","dataset","isfilter","column","filter","tempDataPage","sort","k","temp","left","slice","replace","right","value","input","filterRows","toLowerCase","indexOf","err","pages","classList","contains","remove","add","pageNumber","rows","elem","undefined","addEventListener","eventHandlerSort","eventHandlerFilter","countPages","Math","ceil","buttonPage","type","tablePagination","paginationButtons","eventHandlerPagination","COUNT_ELEMS_ON_PAGE","DATA","position","office","age","start_date","salary","onload","init"],"mappings":"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","file":"src.89c4edb6.map","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\nclass DataWorker {\r\n  constructor(data = [], rowsOnPage = 5, document) {\r\n    this.data = this.objectToArray(data);\r\n    this.pageData = [];\r\n    this.rowsOnPage = rowsOnPage;\r\n    this.document = document;\r\n    this.columnsHead = this.document.querySelectorAll('table thead tr th');\r\n    this.tableBody = this.document.querySelector('table.table tbody');\r\n    this.button = this.document.querySelector('input[name=filter]');\r\n  }\r\n  objectToArray(data, page = false) {\r\n    let result = [];\r\n    if (!page) {\r\n      for (let i = 0; i < data.length; ++i) {\r\n        result.push(JSON.parse(JSON.stringify(Object.values(data[i]))));\r\n      }\r\n    } else {\r\n      let pagesActive = this.document.querySelector('.pagination input.active');\r\n      let a = +pagesActive.name * this.rowsOnPage;\r\n      for (let i = a; i < this.rowsOnPage; ++i) {\r\n        result.push(JSON.parse(JSON.stringify(Object.values(data[i]))));\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  fillingTable(data = this.pageData, event = 'filter') {\r\n    for (let i = 0; i < data.length; ++i) {\r\n      let tr = this.document.createElement('tr');\r\n      this.tableBody.appendChild(this.fillingRow(data[i], tr));\r\n    }\r\n    if (event === 'filter') {\r\n      this.button.click();\r\n    }\r\n  }\r\n\r\n  fillingRow(dataRow, row) {\r\n    for (let j in dataRow) {\r\n      let td = this.document.createElement('td');\r\n      td.innerHTML = dataRow[j];\r\n      row.appendChild(td);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  init() {\r\n    this.initPagination();\r\n    this.sortTable();\r\n    this.filterTable();\r\n    this.fillingTable();\r\n    this.button.onclick = this.eventHandlerFilterClick.bind(this);\r\n  }\r\n  eventHandlerFilterClick() {\r\n    if (window.event.x !== 0 && window.event.y !== 0) {\r\n      this.document.querySelector('table').dataset.isfilter = 'filter';\r\n      //this.document.querySelector('div.pagination input.active').click();\r\n    }\r\n  }\r\n  eventHandlerSort(i, column) {\r\n    let isfilter = this.document.querySelector('table').dataset.isfilter;\r\n    let filter = isfilter === 'filter' ? true : false;\r\n    let tempDataPage = this.pageData;\r\n    if (filter) {\r\n      this.pageData = this.data;\r\n    }\r\n    let sort = column.dataset.sort;\r\n    for (let j = 0; j < this.pageData.length; ++j) {\r\n      for (let k = j + 1; k < this.pageData.length; ++k) {\r\n        let temp = this.pageData[j];\r\n        if (i === this.columnsHead.length - 1) {\r\n          let left = +this.pageData[j][i].slice(1).replace(/,/gi, '.');\r\n          let right = +this.pageData[k][i].slice(1).replace(/,/gi, '.');\r\n          if (sort === '' || sort === 'desc') {\r\n            if (left > right) {\r\n              this.pageData[j] = this.pageData[k];\r\n              this.pageData[k] = temp;\r\n            }\r\n          } else if (sort === 'asc') {\r\n            if (left < right) {\r\n              this.pageData[j] = this.pageData[k];\r\n              this.pageData[k] = temp;\r\n            }\r\n          }\r\n        } else {\r\n          if (sort === '' || sort === 'desc') {\r\n            if (this.pageData[j][i] > this.pageData[k][i]) {\r\n              this.pageData[j] = this.pageData[k];\r\n              this.pageData[k] = temp;\r\n            }\r\n          } else if (sort === 'asc') {\r\n            if (this.pageData[j][i] < this.pageData[k][i]) {\r\n              this.pageData[j] = this.pageData[k];\r\n              this.pageData[k] = temp;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.pageData = tempDataPage;\r\n    column.dataset.sort = sort === '' ? 'asc' : sort === 'asc' ? 'desc' : 'asc';\r\n    let value = this.document.querySelector('input[name=request_string]').value;\r\n    if (value === '' && filter) {\r\n      this.document.querySelector('div.pagination input.active').click();\r\n      return;\r\n    }\r\n    this.tableBody.innerHTML = '';\r\n    this.fillingTable();\r\n  }\r\n\r\n  eventHandlerFilter() {\r\n    try {\r\n      let input = this.document.querySelector('input[name=request_string]');\r\n      if (input.value !== '') {\r\n        let filterRows = [];\r\n        for (let i = 0; i < this.data.length; ++i) {\r\n          for (let j = 0; j < this.data[i].length; ++j) {\r\n            let b = this.data[i][j];\r\n            if (b.toLowerCase().indexOf(input.value.toLowerCase()) !== -1) {\r\n              filterRows.push(this.data[i]);\r\n            }\r\n          }\r\n        }\r\n        if (filterRows.length !== 0) {\r\n          this.tableBody.innerHTML = '';\r\n          this.fillingTable(filterRows);\r\n        }\r\n      } else {\r\n        this.tableBody.innerHTML = '';\r\n        this.fillingTable(this.pageData);\r\n      }\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  }\r\n\r\n  eventHandlerPagination(i) {\r\n    this.document.querySelector('table').dataset.isfilter = '';\r\n    this.document.querySelector('input[name=request_string]').value = '';\r\n    let pages = this.document.querySelectorAll('.pagination input');\r\n    for (let k = 0; k < pages.length; ++k) {\r\n      if (pages[k].classList.contains('active')) {\r\n        pages[k].classList.remove('active');\r\n      }\r\n      if (k === i) {\r\n        pages[k].classList.add('active');\r\n      }\r\n    }\r\n    this.pageData = this.objectToArray(this.data, true);\r\n\r\n    let pageNumber = i + 1;\r\n    let rows = [];\r\n    let e = i * this.rowsOnPage;\r\n    for (let j = e; j < +(pageNumber * this.rowsOnPage); ++j) {\r\n      rows.push(this.data[j]);\r\n    }\r\n    rows = rows.filter(function(elem) {\r\n      return elem !== undefined;\r\n    });\r\n    this.pageData = rows;\r\n    this.tableBody.innerHTML = '';\r\n    this.fillingTable(rows, '');\r\n  }\r\n\r\n  sortTable() {\r\n    for (let i = 0; i < this.columnsHead.length; ++i) {\r\n      this.columnsHead[i].addEventListener(\r\n        'click',\r\n        this.eventHandlerSort.bind(this, i, this.columnsHead[i]),\r\n      );\r\n    }\r\n  }\r\n\r\n  filterTable() {\r\n    this.button.addEventListener('click', this.eventHandlerFilter.bind(this));\r\n  }\r\n  initPagination() {\r\n    let countPages = Math.ceil(this.data.length / this.rowsOnPage);\r\n    for (let i = 0; i < countPages; ++i) {\r\n      let buttonPage = this.document.createElement('input');\r\n      buttonPage.type = 'button';\r\n      buttonPage.name = i;\r\n      buttonPage.value = i + 1;\r\n      if (i === 0) {\r\n        buttonPage.classList.add('active');\r\n      }\r\n      this.document.querySelector('div.pagination').appendChild(buttonPage);\r\n    }\r\n    this.pageData = this.objectToArray(this.data, true);\r\n    this.tablePagination();\r\n  }\r\n\r\n  tablePagination() {\r\n    let paginationButtons = this.document.querySelectorAll('.pagination input');\r\n    for (let i = 0; i < paginationButtons.length; ++i) {\r\n      paginationButtons[i].addEventListener(\r\n        'click',\r\n        this.eventHandlerPagination.bind(this, i),\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default DataWorker;\r\n","import DataWorker from './components/table_component';\r\n\r\nconst COUNT_ELEMS_ON_PAGE = 3;\r\nconst DATA = [\r\n  {\r\n    name: 'Thor Walton',\r\n    position: 'Developer',\r\n    office: 'New York',\r\n    age: '61',\r\n    start_date: '2013/08/11',\r\n    salary: '$95,540',\r\n  },\r\n  {\r\n    name: 'Quinn Flynn',\r\n    position: 'Support Lead',\r\n    office: 'Edinburgh',\r\n    age: '22',\r\n    start_date: '2013/03/03',\r\n    salary: '$342,540',\r\n  },\r\n  {\r\n    name: 'Jenifer Acosta',\r\n    position: 'Junior Javascript Developer',\r\n    office: 'Edinburgh',\r\n    age: '43',\r\n    start_date: '2013/02/01',\r\n    salary: '$75,540',\r\n  },\r\n  {\r\n    name: 'Haley Kennedy',\r\n    position: 'Senior Marketing Designer',\r\n    office: 'London',\r\n    age: '43',\r\n    start_date: '2012/12/18',\r\n    salary: '$313,540',\r\n  },\r\n  {\r\n    name: 'Brielle Williamson',\r\n    position: 'Integration Specialist',\r\n    office: 'New York',\r\n    age: '61',\r\n    start_date: '2012/12/02',\r\n    salary: '$372,540',\r\n  },\r\n  {\r\n    name: 'Michael Silva',\r\n    position: 'Marketing Designer',\r\n    office: 'London',\r\n    age: '66',\r\n    start_date: '2012/11/27',\r\n    salary: '$198,500',\r\n  },\r\n  {\r\n    name: 'Bradley Greer',\r\n    position: 'Software Engineer',\r\n    office: 'London',\r\n    age: '41',\r\n    start_date: '2012/10/13',\r\n    salary: '$132,000',\r\n  },\r\n  {\r\n    name: 'Dia Rios',\r\n    position: 'Personnel Lead',\r\n    office: 'Edinburgh',\r\n    age: '35',\r\n    start_date: '2012/09/26',\r\n    salary: '$217,500',\r\n  },\r\n  {\r\n    name: 'Herrod Chandler',\r\n    position: 'Sales Assistant',\r\n    office: 'San Francisco',\r\n    age: '59',\r\n    start_date: '2012/08/06',\r\n    salary: '$137,500',\r\n  },\r\n  {\r\n    name: 'Zorita Serrano',\r\n    position: 'Software Engineer',\r\n    office: 'San Francisco',\r\n    age: '56',\r\n    start_date: '2012/06/01',\r\n    salary: '$115,000',\r\n  },\r\n];\r\n\r\nwindow.onload = function() {\r\n  let worker = new DataWorker(DATA, COUNT_ELEMS_ON_PAGE, document);\r\n  worker.init();\r\n};\r\n"]}